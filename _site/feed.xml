<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>婷婷的博客</title>
    <description></description>
    <link>http://blog26.com/</link>
    <atom:link href="http://blog26.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 24 Jul 2017 11:28:11 +0800</pubDate>
    <lastBuildDate>Mon, 24 Jul 2017 11:28:11 +0800</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>Git学习总结</title>
        <description>&lt;h1 id=&quot;git&quot;&gt;Git学习总结&lt;/h1&gt;

&lt;h2 id=&quot;git-1&quot;&gt;初始GIT&lt;/h2&gt;

&lt;p&gt;​	Git是一款开源的分布式版本控制系统，是用于Linux内核开发的版本控制工具。究其历史，起是Linus开发Git是为了作为一种过渡方案来代替BitKeeper，但发展到今日，Git分布式的优越性让越来越多人使用，如今在LInux、Unix、Mac和Windows这几大平台上都能够运行。&lt;/p&gt;

&lt;h2 id=&quot;git-2&quot;&gt;Git常用命令&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; 查看git是否安装&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install git&lt;/code&gt; 安装git&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git config&lt;/code&gt; 设置名字和email地址&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; 初始化仓库&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; 添加文件到仓库&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 把文件提交到仓库&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 查看仓库状态&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff&lt;/code&gt; 查看文件的修改&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; 查看提交日志&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset&lt;/code&gt; 版本回退（&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt; 表示当前版本，&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD^&lt;/code&gt; 表示上一个版本，&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD^^&lt;/code&gt; 表示上上个版本，用&lt;code class=&quot;highlighter-rouge&quot;&gt;commit id&lt;/code&gt; 可以指定回到某个版本，当使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset HEAD file&lt;/code&gt;可以把暂存区的修改回退到工作区）&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git relog&lt;/code&gt; 查看命令历史，每个版本的&lt;code class=&quot;highlighter-rouge&quot;&gt;commit id&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -- file&lt;/code&gt; 丢弃工作区的修改（没有&lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;，就变成了“切换到另一个分支”的命令）&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rm&lt;/code&gt; 删除（注意接着还要&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;)&lt;/p&gt;

&lt;h2 id=&quot;master&quot;&gt;工作区、暂存区、master分支&lt;/h2&gt;

&lt;p&gt;​	工作区有一个隐藏目录&lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt;是Git的版本库。版本库里有一个称为stage或index 的暂存区。在创建时版本库时，Git自动为我们创建了唯一一个&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支。&lt;/p&gt;

&lt;p&gt;​	建立版本库并提交文件的状态可描绘为：&lt;/p&gt;

&lt;p&gt;​	工作区存在需要提交到版本库的文件时，用&lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;命令添加文件时实际上将文件修改添加到暂存区。接着用&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;提交更改时实际上是把暂存区的所有内容提交到&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支。&lt;/p&gt;

&lt;p&gt;​	如果不添加到暂存区，那么所做的修改是无法单单通过&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;提交到仓库的。&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;

 	GitHub是一个提供Git仓库托管服务的网站，在上面可以免费获得Git远程仓库。

&lt;p&gt;​	由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以在使用前需要创建SSH Key。&lt;/p&gt;

&lt;p&gt;​	在GitHub上，可以创建一个GitHub仓库，再把一个本地仓库与之关联，就可以把本地仓库的内容推送到Git仓库中。实现方法：在本地仓库下运行命令：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
zhuangtingting@zhuangtingting-VirtualBox:~/learngit$ git remote add origin git@github.com:tingtingZ/learngit.git
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;​	其中，“tingtingZ“是GitHub账户名。&lt;/p&gt;

&lt;p&gt;​	接下来，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;命令，把当前分支&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;推送到远程。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
zhuangtingting@zhuangtingting-VirtualBox:~/learngit$ git push -u origin master
Username for &#39;https://github.com&#39;: tingtinZ
Password for &#39;https://tingtinZ@github.com&#39;: 
Counting objects: 9, done.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (9/9), 779 bytes | 0 bytes/s, done.
Total 9 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/tingtinZ/learngit.git
 * [new branch]      master -&amp;gt; master
Branch master set up to track remote branch master from origin.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;​	使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -u origin master&lt;/code&gt;第一次推送master分支的所有内容。&lt;/p&gt;

&lt;p&gt;​	此后，每次本地提交后，只要有必要，就可以使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin master&lt;/code&gt;推送最新修改。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;学习中出现的问题及解决&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;问题1：使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 命令将文件提交到仓库时出现“Please tell me who you are”的提示。&lt;/p&gt;

    &lt;p&gt;```
zhuangtingting@zhuangtingting-VirtualBox:~/learngit$ git commit -m “wrote a readme file”&lt;/p&gt;

    &lt;p&gt;*** Please tell me who you are.&lt;/p&gt;

    &lt;p&gt;Run&lt;/p&gt;

    &lt;p&gt;git config –global user.email “you@example.com”
  git config –global user.name “Your Name”&lt;/p&gt;

    &lt;p&gt;to set your account’s default identity.
Omit –global to set the identity only in this repository.&lt;/p&gt;

    &lt;p&gt;fatal: unable to auto-detect email address (got ‘zhuangtingting@zhuangtingting-VirtualBox.(none)’)
```&lt;/p&gt;

    &lt;p&gt;解决：Git是分布式版本控制系统，必须要通过设置名字和email地址。这里因为安装后没有进行这一个步骤，所以出现该提示。用&lt;code class=&quot;highlighter-rouge&quot;&gt;git config&lt;/code&gt;命令设置之后，&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 正常运行。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
zhuangtingting@zhuangtingting-VirtualBox:~/learngit$ git config user.email &quot;634545656@qq.com&quot;
zhuangtingting@zhuangtingting-VirtualBox:~/learngit$ git config user.name &quot;zhuangtingting&quot;
zhuangtingting@zhuangtingting-VirtualBox:~/learngit$ git commit -m &quot;wrote a readme file&quot;
[master (root-commit) 11cbb73] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;问题2：在使用git push&lt;code class=&quot;highlighter-rouge&quot;&gt;命令把当前分支&lt;/code&gt;master`推送到远程时，出现” Repository not found.”的错误提示，显示仓库没有找到。&lt;/p&gt;

    &lt;p&gt;```
zhuangtingting@zhuangtingting-VirtualBox:~/learngit$ git push -u origin master
The authenticity of host ‘github.com (192.30.255.112)’ can’t be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added ‘github.com,192.30.255.112’ (RSA) to the list of known hosts.
ERROR: Repository not found.
fatal: Could not read from remote repository.&lt;/p&gt;

    &lt;p&gt;Please make sure you have the correct access rights
and the repository exists.
```&lt;/p&gt;

    &lt;p&gt;解决：使用&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh git@github.com&lt;/code&gt; 命令测试是否能连接到GitHub时：&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
root@zhuangtingting-VirtualBox:/home/zhuangtingting/learngit# ssh git@github.comThe authenticity of host &#39;github.com (192.30.255.113)&#39; can&#39;t be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &#39;github.com,192.30.255.113&#39; (RSA) to the list of known hosts.
PTY allocation request failed on channel 0
Hi tingtinZ! You&#39;ve successfully authenticated, but GitHub does not provide shell access.
Connection to github.com closed.
&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;结果属于正常回显，证明可以正常连接到GitHub。&lt;/p&gt;

    &lt;p&gt;删除原先设置的远程仓库origin，再重新添加远程仓库后，不再出现此错误，成功运行。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
zhuangtingting@zhuangtingting-VirtualBox:~/learngit$ git push -u origin master
Username for &#39;https://github.com&#39;: tingtinZ
Password for &#39;https://tingtinZ@github.com&#39;: 
Counting objects: 9, done.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (9/9), 779 bytes | 0 bytes/s, done.
Total 9 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/tingtinZ/learngit.git
 * [new branch]      master -&amp;gt; master
Branch master set up to track remote branch master from origin.
&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 20 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://blog26.com/2017/07/git-learn/</link>
        <guid isPermaLink="true">http://blog26.com/2017/07/git-learn/</guid>
        
        <category>Git学习</category>
        
        
      </item>
    
      <item>
        <title>Markdown学习总结</title>
        <description>&lt;h1 id=&quot;markdown&quot;&gt;Markdown学习总结&lt;/h1&gt;

&lt;h2 id=&quot;markdown-1&quot;&gt;一、什么是Markdown&lt;/h2&gt;

&lt;p&gt;​	Markdown 是一种轻量级标记语言，通过使用一些简单的符号（* / ` &amp;gt; [] () #）来标记文本格式，可以导出成PDF、HTML、WORD等多种格式。&lt;/p&gt;

&lt;h2 id=&quot;markdown-2&quot;&gt;二、Markdown的优点&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;语法简单。使用简单的符号标记格式，简单易学。&lt;/li&gt;
  &lt;li&gt;兼容性强。Markdown 是兼容性非常强的纯文本内容，可以使用任何编辑器打开，格式都不会乱。&lt;/li&gt;
  &lt;li&gt;导出方便。Markdown 可以导出 PDF、Word、HTML、Epub、LaTeX 等文件格式。&lt;/li&gt;
  &lt;li&gt;专注内容。不用纠结排版问题。&lt;/li&gt;
  &lt;li&gt;团队协作。 Github、Gitlab、Gitbook 都支持 Markdown，便于团队协作。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;markdown-3&quot;&gt;三、Markdown不适用的情况&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;需要复杂排版的时候，比如纸版图书编辑就不太适合用 Markdown。我的做法是从 Markdown 导出 Word 文档，然后交给编辑。&lt;/li&gt;
  &lt;li&gt;需要复杂表格的时候，因为 Markdown 对表格的支持太简单了。&lt;/li&gt;
  &lt;li&gt;需要调整图片大小或直接贴本地图片的时候。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;markdown-4&quot;&gt;四、Markdown的常用语法&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;标题&lt;/p&gt;

    &lt;p&gt;行首通过“#”数量表示几级标题，一共只有1~6级标题，1级标题字体最大。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;粗体&lt;/p&gt;

    &lt;p&gt;将需要设置为斜体的文字两端使用2个“*”包含起来。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;斜体&lt;/p&gt;

    &lt;p&gt;将需要设置为斜体的文字两端使用1个“*”包含起来。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有序列表&lt;/p&gt;

    &lt;p&gt;使用数字后面跟上句号，并空格。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;无序列表&lt;/p&gt;

    &lt;p&gt;在文字开头添加(*, +, -)实现无序列表，但是要注意和文字之间需要添加空格。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;引用&lt;/p&gt;

    &lt;p&gt;开头添加“&amp;gt;”表示。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;图片&lt;/p&gt;

    &lt;p&gt;语法：&lt;code class=&quot;highlighter-rouge&quot;&gt;![]()&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;链接：&lt;/p&gt;

    &lt;p&gt;语法：&lt;code class=&quot;highlighter-rouge&quot;&gt;[]()。&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;代码&lt;/p&gt;

    &lt;p&gt;第一种：简单文字出现一个代码框。使用&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt;。
第二种：大片文字需要实现代码框。使用Tab和四个空格。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;markdown-&quot;&gt;五、支持Markdown 的软件及网站&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;不同系统下常用的Markdown编辑器&lt;/p&gt;

    &lt;p&gt;Windows：MarkdownPad、Smark、Atom、VSCode、Miu、Typora、RStudio&lt;/p&gt;

    &lt;p&gt;Linux：VSCode、Atom、ReText、UberWriter、RStudio&lt;/p&gt;

    &lt;p&gt;OSX：VSCode、Atom、Byword、Mou、Typora、MacDown、RStudio&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在线网站&lt;/p&gt;

    &lt;p&gt;简书、知乎、CSDN、Github、Gitlab、Gitboo&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section&quot;&gt;六、总结&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;学习中遇到的问题：&lt;/p&gt;

    &lt;p&gt;（1）刚开始下载的编辑器是MarkdownPad，但是安装失败。&lt;/p&gt;

    &lt;p&gt;（2）Typora上使用嵌入实现居中效果时，并没有渲染出效果。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;问题的解决：&lt;/p&gt;

    &lt;p&gt;（1）没有成功解决安装失败的问题，安装了另一款编辑器Typora。&lt;/p&gt;

    &lt;p&gt;（2）通过查阅资料得知该效果在导出文件时才能显现。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;学习心得：&lt;/p&gt;

    &lt;p&gt;​	通过查阅资料了解到Markdown的概念及语法，并进行实践，在windows7系统下安装支持Markdown的Typora编辑器后进行编辑。在Typora 的使用上，Typora 的菜单栏对于标题、段落、列表、表格等的格式排版给予了很大的便利。Typora 的编辑与预览融为一体，回车后立即渲染效果，但是却不能再次编辑。另外，对于一些嵌入也不能进行预览，需要导出后才能观察到效果。在Markdown的实践学习体会上，深深的体会到Markdown相对于word等编辑对于并不用到word太多功能的使用者来说，使用Markdown能够轻松进行要求不太高的排版，而且在导出上导出的格式多样，消除了因为要编辑不同格式的文件而下载诸多编辑器和软件的麻烦。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 19 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://blog26.com/2017/07/markdown-learn/</link>
        <guid isPermaLink="true">http://blog26.com/2017/07/markdown-learn/</guid>
        
        <category>Markdown学习</category>
        
        
      </item>
    
  </channel>
</rss>
